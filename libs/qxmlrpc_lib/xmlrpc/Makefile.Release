#############################################################################
# Makefile for building: libqxmlrpc.a
# Generated by qmake (2.01a) (Qt 4.7.4) on: ?? ????. 5 18:17:23 2011
# Project:  xmlrpc.pro
# Template: lib
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_XML_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -fPIC -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -fPIC -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I. -I.. -Irelease
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = release/

####### Files

SOURCES       = client.cpp \
		server.cpp \
		serverintrospection.cpp \
		request.cpp \
		response.cpp \
		variant.cpp release/moc_client.cpp \
		release/moc_server.cpp \
		release/moc_server_private.cpp
OBJECTS       = release/client.o \
		release/server.o \
		release/serverintrospection.o \
		release/request.o \
		release/response.o \
		release/variant.o \
		release/moc_client.o \
		release/moc_server.o \
		release/moc_server_private.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/debug_and_release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/build_pass.prf \
		/usr/share/qt4/mkspecs/features/staticlib.prf \
		/usr/share/qt4/mkspecs/features/static.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		xmlrpc.pro
QMAKE_TARGET  = qxmlrpc
DESTDIR       = ../
TARGET        = libqxmlrpc.a

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c -include release/qxmlrpc $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c -include release/qxmlrpc $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c -include release/qxmlrpc $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c -include release/qxmlrpc $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c -include release/qxmlrpc $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile.Release ../$(TARGET) 

staticlib: ../$(TARGET)

../$(TARGET):  $(OBJECTS) $(OBJCOMP) 
	@$(CHK_DIR_EXISTS) ../ || $(MKDIR) ../ 
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS)
	-$(DEL_FILE) ../$(TARGET)
	-$(MOVE) $(TARGET) ../


qmake:  FORCE
	@$(QMAKE) -o Makefile.Release xmlrpc.pro

dist: 
	@$(CHK_DIR_EXISTS) release/qxmlrpc1.0.0 || $(MKDIR) release/qxmlrpc1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) release/qxmlrpc1.0.0/ && $(COPY_FILE) --parents stable.h client.h server.h server_private.h serverintrospection.h request.h response.h variant.h release/qxmlrpc1.0.0/ && $(COPY_FILE) --parents client.cpp server.cpp serverintrospection.cpp request.cpp response.cpp variant.cpp release/qxmlrpc1.0.0/ && (cd `dirname release/qxmlrpc1.0.0` && $(TAR) qxmlrpc1.0.0.tar qxmlrpc1.0.0 && $(COMPRESS) qxmlrpc1.0.0.tar) && $(MOVE) `dirname release/qxmlrpc1.0.0`/qxmlrpc1.0.0.tar.gz . && $(DEL_FILE) -r release/qxmlrpc1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) release/qxmlrpc.gch/c release/qxmlrpc.gch/c++
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile.Release


###### Prefix headers
release/qxmlrpc.gch/c: stable.h 
	@$(CHK_DIR_EXISTS) release/qxmlrpc.gch/ || $(MKDIR) release/qxmlrpc.gch/ 
	$(CC) $(CFLAGS) $(INCPATH) -x c-header -c stable.h -o release/qxmlrpc.gch/c

release/qxmlrpc.gch/c++: stable.h 
	@$(CHK_DIR_EXISTS) release/qxmlrpc.gch/ || $(MKDIR) release/qxmlrpc.gch/ 
	$(CXX) $(CXXFLAGS) $(INCPATH) -x c++-header -c stable.h -o release/qxmlrpc.gch/c++

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_client.cpp release/moc_server.cpp release/moc_server_private.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release/moc_client.cpp release/moc_server.cpp release/moc_server_private.cpp
release/moc_client.cpp: client.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) client.h -o release/moc_client.cpp

release/moc_server.cpp: variant.h \
		server.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) server.h -o release/moc_server.cpp

release/moc_server_private.cpp: variant.h \
		server_private.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) server_private.h -o release/moc_server_private.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

release/client.o: client.cpp release/qxmlrpc.gch/c++
	$(CXX) -c -include release/qxmlrpc $(CXXFLAGS) $(INCPATH) -o release/client.o client.cpp

release/server.o: server.cpp release/qxmlrpc.gch/c++
	$(CXX) -c -include release/qxmlrpc $(CXXFLAGS) $(INCPATH) -o release/server.o server.cpp

release/serverintrospection.o: serverintrospection.cpp serverintrospection.h \
		release/qxmlrpc.gch/c++
	$(CXX) -c -include release/qxmlrpc $(CXXFLAGS) $(INCPATH) -o release/serverintrospection.o serverintrospection.cpp

release/request.o: request.cpp request.h \
		variant.h \
		release/qxmlrpc.gch/c++
	$(CXX) -c -include release/qxmlrpc $(CXXFLAGS) $(INCPATH) -o release/request.o request.cpp

release/response.o: response.cpp response.h \
		variant.h \
		release/qxmlrpc.gch/c++
	$(CXX) -c -include release/qxmlrpc $(CXXFLAGS) $(INCPATH) -o release/response.o response.cpp

release/variant.o: variant.cpp release/qxmlrpc.gch/c++
	$(CXX) -c -include release/qxmlrpc $(CXXFLAGS) $(INCPATH) -o release/variant.o variant.cpp

release/moc_client.o: release/moc_client.cpp release/qxmlrpc.gch/c++
	$(CXX) -c -include release/qxmlrpc $(CXXFLAGS) $(INCPATH) -o release/moc_client.o release/moc_client.cpp

release/moc_server.o: release/moc_server.cpp release/qxmlrpc.gch/c++
	$(CXX) -c -include release/qxmlrpc $(CXXFLAGS) $(INCPATH) -o release/moc_server.o release/moc_server.cpp

release/moc_server_private.o: release/moc_server_private.cpp release/qxmlrpc.gch/c++
	$(CXX) -c -include release/qxmlrpc $(CXXFLAGS) $(INCPATH) -o release/moc_server_private.o release/moc_server_private.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

